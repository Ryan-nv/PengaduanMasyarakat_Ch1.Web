{
  "version": 3,
  "sources": ["../../../../../Modules/Layanan/Pengaduan/PengaduanPage.ts", "../../../../../Modules/Layanan/Pengaduan/PengaduanGrid.ts", "../../../../../Modules/Layanan/Pengaduan/PengaduanDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { PengaduanGrid } from './PengaduanGrid';\n\n$(function() {\r\n    initFullHeightGridPage(new PengaduanGrid($('#GridDiv')).element);\r\n});", "\uFEFFimport { Decorators, EntityGrid, ToolButton } from '@serenity-is/corelib';\r\nimport { Authorization } from '@serenity-is/corelib/q';\r\nimport { GridOptions } from '@serenity-is/sleekgrid';\r\nimport { PdfExportHelper } from '@serenity-is/extensions';\r\nimport { PengaduanColumns, PengaduanRow, PengaduanService } from '../../ServerTypes/Layanan';\r\nimport { PengaduanDialog } from './PengaduanDialog';\r\n\r\n@Decorators.registerClass('PengaduanMasyarakat.Layanan.PengaduanGrid')\r\nexport class PengaduanGrid extends EntityGrid<PengaduanRow, any> {\r\n    protected getColumnsKey() { return PengaduanColumns.columnsKey; }\r\n    protected getDialogType() { return PengaduanDialog; }\r\n    protected getIdProperty() { return PengaduanRow.idProperty; }\r\n    protected getInsertPermission() { return PengaduanRow.insertPermission; }\r\n    protected getLocalTextPrefix() { return PengaduanRow.localTextPrefix; }\r\n    protected getService() { return PengaduanService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getSlickOptions(): GridOptions<any> {\r\n        var options = super.getSlickOptions();\r\n        options.rowHeight = 120;\r\n        return options;\r\n    }\r\n\r\n    protected getButtons(): ToolButton[] {\r\n        var btn = super.getButtons();\r\n        if(Authorization.hasPermission(\"GeneratePdf\")){\r\n            btn.push(PdfExportHelper.createToolButton({\r\n                grid: this, \r\n                onViewSubmit: () => this.onViewSubmit()\r\n            }))\r\n        }\r\n        return btn\r\n    }\r\n}", "\uFEFFimport { Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\r\nimport { Authorization, EditorAttribute } from '@serenity-is/corelib/q';\r\nimport { TextEditor } from '@serenity-is/sleekgrid';\r\nimport { PengaduanForm, PengaduanRow, PengaduanService } from '../../ServerTypes/Layanan';\r\n\r\n@Decorators.registerClass('PengaduanMasyarakat.Layanan.PengaduanDialog')\r\nexport class PengaduanDialog extends EntityDialog<PengaduanRow, any> {\r\n    protected getFormKey() { return PengaduanForm.formKey; }\r\n    protected getIdProperty() { return PengaduanRow.idProperty; }\r\n    protected getLocalTextPrefix() { return PengaduanRow.localTextPrefix; }\r\n    protected getNameProperty() { return PengaduanRow.nameProperty; }\r\n    protected getService() { return PengaduanService.baseUrl; }\r\n    protected getDeletePermission() { return PengaduanRow.deletePermission; }\r\n    protected getInsertPermission() { return PengaduanRow.insertPermission; }\r\n    protected getUpdatePermission() { return PengaduanRow.updatePermission; }\r\n\r\n    protected form = new PengaduanForm(this.idPrefix);\r\n    \r\n    protected updateInterface(): void {\r\n        super.updateInterface();\r\n        this.form.Tanggal.value = new Date().toDateString();\r\n        EditorUtils.setReadOnly(this.form.Username, true);\r\n        this.form.Username.value = Authorization.username;\r\n    }\r\n    protected afterLoadEntity(): void {\r\n        super.afterLoadEntity();\r\n        if(!Authorization.hasPermission(\"Pengaduan:SetStatus\")){\r\n            this.form.Status.getGridField().toggle(false);\r\n        }\r\n        else if(!Authorization.hasPermission(\"Pengaduan:Insert\")){\r\n            EditorUtils.setReadOnly(this.form.Gambar,true);\r\n            EditorUtils.setReadOnly(this.form.Tanggal,true);\r\n            EditorUtils.setReadOnly(this.form.Laporan,true);\r\n            EditorUtils.setReadOnly(this.form.Username,true);\r\n        }\r\n    }\r\n}"],
  "mappings": "uJAAC,IAAAA,EAAuC,SCAvC,IAAAC,EAAmD,SACpDC,EAA8B,SAE9BC,EAAgC,SCH/B,IAAAC,EAAsD,SACvDC,EAA+C,SAKxC,IAAMC,EAAN,cAA8B,cAAgC,CAA9D,kCAUH,KAAU,KAAO,IAAIC,EAAc,KAAK,QAAQ,EATtC,YAAa,CAAE,OAAOA,EAAc,OAAS,CAC7C,eAAgB,CAAE,OAAOC,EAAa,UAAY,CAClD,oBAAqB,CAAE,OAAOA,EAAa,eAAiB,CAC5D,iBAAkB,CAAE,OAAOA,EAAa,YAAc,CACtD,YAAa,CAAE,OAAOC,EAAiB,OAAS,CAChD,qBAAsB,CAAE,OAAOD,EAAa,gBAAkB,CAC9D,qBAAsB,CAAE,OAAOA,EAAa,gBAAkB,CAC9D,qBAAsB,CAAE,OAAOA,EAAa,gBAAkB,CAI9D,iBAAwB,CAC9B,MAAM,gBAAgB,EACtB,KAAK,KAAK,QAAQ,MAAQ,IAAI,KAAK,EAAE,aAAa,EAClD,cAAY,YAAY,KAAK,KAAK,SAAU,EAAI,EAChD,KAAK,KAAK,SAAS,MAAQ,gBAAc,QAC7C,CACU,iBAAwB,CAC9B,MAAM,gBAAgB,EAClB,gBAAc,cAAc,qBAAqB,EAG5C,gBAAc,cAAc,kBAAkB,IACnD,cAAY,YAAY,KAAK,KAAK,OAAO,EAAI,EAC7C,cAAY,YAAY,KAAK,KAAK,QAAQ,EAAI,EAC9C,cAAY,YAAY,KAAK,KAAK,QAAQ,EAAI,EAC9C,cAAY,YAAY,KAAK,KAAK,SAAS,EAAI,GAN/C,KAAK,KAAK,OAAO,aAAa,EAAE,OAAO,EAAK,CAQpD,CACJ,EA9BaE,EAAAJ,EAAA,mBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,6CAA6C,GAC1DL,GDEN,IAAMM,EAAN,cAA4B,YAA8B,CACnD,eAAgB,CAAE,OAAOC,EAAiB,UAAY,CACtD,eAAgB,CAAE,OAAOC,CAAiB,CAC1C,eAAgB,CAAE,OAAOC,EAAa,UAAY,CAClD,qBAAsB,CAAE,OAAOA,EAAa,gBAAkB,CAC9D,oBAAqB,CAAE,OAAOA,EAAa,eAAiB,CAC5D,YAAa,CAAE,OAAOC,EAAiB,OAAS,CAE1D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAEU,iBAAoC,CAC1C,IAAIC,EAAU,MAAM,gBAAgB,EACpC,OAAAA,EAAQ,UAAY,IACbA,CACX,CAEU,YAA2B,CACjC,IAAIC,EAAM,MAAM,WAAW,EAC3B,OAAG,gBAAc,cAAc,aAAa,GACxCA,EAAI,KAAK,kBAAgB,iBAAiB,CACtC,KAAM,KACN,aAAc,IAAM,KAAK,aAAa,CAC1C,CAAC,CAAC,EAECA,CACX,CACJ,EA5BaC,EAAAR,EAAA,iBAAAA,EAANS,EAAA,CADN,aAAW,cAAc,2CAA2C,GACxDT,GDLb,EAAE,UAAW,IACT,0BAAuB,IAAIU,EAAc,EAAE,UAAU,CAAC,EAAE,OAAO,CACnE,CAAC",
  "names": ["import_q", "import_corelib", "import_q", "import_extensions", "import_corelib", "import_q", "PengaduanDialog", "PengaduanForm", "PengaduanRow", "PengaduanService", "__name", "__decorateClass", "PengaduanGrid", "PengaduanColumns", "PengaduanDialog", "PengaduanRow", "PengaduanService", "container", "options", "btn", "__name", "__decorateClass", "PengaduanGrid"]
}
